# Configuration file for watch_cron_logs operation in TST area

subject      Exceptions test              # subject of email
timeout      1000                    # Default tool timeout
heartbeat_timeout 120                # Maximum age of heartbeat file (seconds)
iterations   1

# Data files and directories.  The *_dir vars can have $ENV{} vars which
# get interpolated.  (Note lack of task name after TST_DATA because this is just for test).

data_dir     $ENV{SKA}/data/exception          # Data file directory
log_dir      $ENV{SKA}/data/exception/logs     # Log file directory
bin_dir      $ENV{SKA}/bin           # Bin dir (optional, see task def'n)

# Email addresses that receive an alert if there was a severe error in
# running jobs (i.e. couldn't start jobs or couldn't open log file).
# Processing errors *within* the jobs are caught with watch_cron_logs

#alert	     aldcroft@head.cfa.harvard.edu

# Define task parameters
#  cron: Job repetition specification ala crontab
#  exec: Name of executable.  Can have $ENV{} vars which get interpolated.
#        If bin_dir is defined then bin_dir is prepended to non-absolute exec names.
#  log: Name of log.  Can have $ENV{} vars which get interpolated.
#        If log is set to '' then no log file will be created
#        If log is not defined it is set to <task_name>.log.
#        If log_dir is defined then log_dir is prepended to non-absolute log names.
#  timeout: Maximum time (seconds) for job before timing out

# This runs just fine, and has multiple jobs which get run in specified order
# Note the syntax 'exec <number> : cmd', which means that the given command is
# executed only once for each <number> of times the task is executed.  In the
# example below, the commands are done once each 1, 2, and 4 minutes, respectively.

<task task1>
      cron       * * * * *
      check_cron = * * * * *
      exec task1.pl 1
      exec $ENV{SKA}/bin/exception.py
      timeout 100
      context 1
      <check>
        <error>
          * error
        </error>
      </check>
</task>
