# Configuration file for four tests that generate different failures

loud         1                       # Run loudly
subject      Fail tests              # subject of email
timeout      1000                    # Default tool timeout
heartbeat_timeout 120                # Maximum age of heartbeat file (seconds)


# Data files and directories.  The *_dir vars can have $ENV{} vars which
# get interpolated.  (Note lack of task name after TST_DATA because this is just for test).

data_dir     $ENV{SKA}/data/fail          # Data file directory
log_dir      $ENV{SKA}/data/fail/logs     # Log file directory
bin_dir      $ENV{SKA}/bin           # Bin dir (optional, see task def'n)

# Email addresses that receive an alert if there was a severe error in
# running jobs (i.e. couldn't start jobs or couldn't open log file).
# Processing errors *within* the jobs are caught with watch_cron_logs

#alert	     aldcroft@head.cfa.harvard.edu

# Define task parameters
#  cron: Job repetition specification ala crontab
#  exec: Name of executable.  Can have $ENV{} vars which get interpolated.
#        If bin_dir is defined then bin_dir is prepended to non-absolute exec names.
#  log: Name of log.  Can have $ENV{} vars which get interpolated.
#        If log is set to '' then no log file will be created
#        If log is not defined it is set to <task_name>.log.
#        If log_dir is defined then log_dir is prepended to non-absolute log names.
#  timeout: Maximum time (seconds) for job before timing out

 # Task that isn't found, generating email
  <task task1>
        cron * * * * *
        exec task1.pll 20
        log  task1_nonstandard.log
  </task>

  # Task that times out
  <task task2>
        cron * * * * *
        exec task2.pl 10
        timeout 5
  </task>

  # Can't write log file
 <task task3>
       cron * * * * *
       exec task1.pl 10
       log /cant/write/to/this/logfile
 </task>

 # Executable that returns non-zero status
 <task task4>
       cron * * * * *
       exec /bin/ls doesntexist
 </task>


